diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2b6a466..c7299e5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,9 +22,10 @@ else()
 endif()
 
 if(CPP11_NO_BOOST AND NOT MSVC)
-    set( CMAKE_CXX_FLAGS "-std=c++0x -Wall ${CMAKE_CXX_FLAGS}" )
     if(_CLANG_)
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall")
+    else()
+        set(CMAKE_CXX_FLAGS "-std=c++0x -Wall ${CMAKE_CXX_FLAGS}")
     endif()
 endif()
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 812f25a..f489f0c 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -26,6 +26,8 @@ append_glob(SOURCES log/*.cpp)
 ## User build options
 
 option(BUILD_PANGOLIN_GUI "Build support for Pangolin GUI" ON)
+option(BUILD_PANGOLIN_PYTHON "Build support for Pangolin Python" ON)
+
 if(BUILD_PANGOLIN_GUI)
   append_glob(HEADERS ${INCDIR}/gl/*.h*)
   append_glob(HEADERS ${INCDIR}/display/*.h*)
@@ -195,28 +197,30 @@ else()
     endif()
 endif()
 
-find_package(PythonLibs QUIET)
-if(BUILD_PANGOLIN_GUI AND BUILD_PANGOLIN_VARS AND PYTHONLIBS_FOUND)
-  set(HAVE_PYTHON 1)
-  list(APPEND HEADERS
-    ${INCDIR}/console/ConsoleInterpreter.h
-    ${INCDIR}/console/ConsoleView.h
-    ${INCDIR}/python/PyInterpreter.h
-    ${INCDIR}/python/PyModulePangolin.h
-    ${INCDIR}/python/PyUniqueObj.h
-    ${INCDIR}/python/PyVar.h
-    ${INCDIR}/python/PyPangoIO.h
-  )
-  list(APPEND SOURCES
-    console/ConsoleView.cpp
-    python/PyInterpreter.cpp
-  )
-  if(_GCC_)
-    set_source_files_properties(python/PyInterpreter.cpp PROPERTIES COMPILE_FLAGS -fno-strict-aliasing)
-  endif()
-  list(APPEND INTERNAL_INC ${PYTHON_INCLUDE_DIR})
-  list(APPEND LINK_LIBS    ${PYTHON_LIBRARY})
-  message(STATUS "Python Found and Enabled")
+if(BUILD_PANGOLIN_PYTHON)
+    find_package(PythonLibs QUIET)
+    if(BUILD_PANGOLIN_GUI AND BUILD_PANGOLIN_VARS AND PYTHONLIBS_FOUND)
+      set(HAVE_PYTHON 1)
+      list(APPEND HEADERS
+        ${INCDIR}/console/ConsoleInterpreter.h
+        ${INCDIR}/console/ConsoleView.h
+        ${INCDIR}/python/PyInterpreter.h
+        ${INCDIR}/python/PyModulePangolin.h
+        ${INCDIR}/python/PyUniqueObj.h
+        ${INCDIR}/python/PyVar.h
+        ${INCDIR}/python/PyPangoIO.h
+      )
+      list(APPEND SOURCES
+        console/ConsoleView.cpp
+        python/PyInterpreter.cpp
+      )
+      if(_GCC_)
+        set_source_files_properties(python/PyInterpreter.cpp PROPERTIES COMPILE_FLAGS -fno-strict-aliasing)
+      endif()
+      list(APPEND INTERNAL_INC ${PYTHON_INCLUDE_DIR})
+      list(APPEND LINK_LIBS    ${PYTHON_LIBRARY})
+      message(STATUS "Python Found and Enabled")
+    endif()
 endif()
 
 option(BUILD_PANGOLIN_OCULUS "Build support for Oculus HUD" OFF)
