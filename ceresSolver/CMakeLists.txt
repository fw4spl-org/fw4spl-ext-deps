cmake_minimum_required(VERSION 2.8)

project(ceresSolverBuilder)

include(ExternalProject)

set(CACHED_URL http://ceres-solver.org/ceres-solver-1.9.0.tar.gz)

set(CERES_SOLVER_CMAKE_ARGS
    ${COMMON_CMAKE_ARGS}

    -DEIGEN_INCLUDE_DIR_HINTS:PATH=${CMAKE_INSTALL_PREFIX}/include/eigen3
    -DGLOG_LIBRARY_DIR_HINTS:PATH=${CMAKE_INSTALL_PREFIX}/lib

    -DCXSPARSE_LIBRARY_DIR_HINTS:PATH=${CMAKE_INSTALL_PREFIX}/lib
    -DCXSPARSE_INCLUDE_DIRS:PATH=${CMAKE_INSTALL_PREFIX}/include/CXSparse
    -DCXSPARSE_INCLUDE_DIR:PATH=${CMAKE_INSTALL_PREFIX}/include/CXSparse

    -DLAPACK:BOOL=OFF # unused if you choose CXPARSE, only used by SUITESPARSE
    -DSUITESPARSE:BOOL=OFF
    -DCXSPARSE:BOOL=ON
    -DGFLAGS:BOOL=ON # only needed to build examples and tests.
    -DMINIGLOG:BOOL=OFF
    -DSCHUR_SPECIALIZATIONS:BOOL=ON
    -DBUILD_DOCUMENTATION:BOOL=OFF
    -DBUILD_TESTING:BOOL=OFF
    -DBUILD_EXAMPLES:BOOL=OFF
    -DBUILD_SHARED_LIBS:BOOL=ON
    -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS} -std=c++11

)
if(NOT WIN32)
    list(APPEND CERES_SOLVER_CMAKE_ARGS 
                -DCMAKE_BUILD_TYPE=Release) # Force Release for performances
endif()

set(CERES_PATCH_DIR ${CMAKE_CURRENT_SOURCE_DIR}/patch)
set(CERES_PATCH_CMD ${PATCH_EXECUTABLE} -p1 -i ${CERES_PATCH_DIR}/FindGlog.cmake.diff -d <SOURCE_DIR>)

if (UNIX AND NOT APPLE AND NOT ANDROID)
    list (APPEND CERES_PATCH_CMD && "${PATCH_EXECUTABLE}" -p1 -i "${CERES_PATCH_DIR}/CMakeLists.diff" -d "<SOURCE_DIR>")
    list( APPEND CERES_SOLVER_CMAKE_ARGS -DCXSPARSE_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/lib/libCXSparse.so)    
endif()

find_package(OpenMP)
if(OPENMP_FOUND)
    list (APPEND CERES_SOLVER_CMAKE_ARGS -DOPENMP:BOOL=ON)
else()
    list (APPEND CERES_SOLVER_CMAKE_ARGS -DOPENMP:BOOL=OFF)
endif()

ExternalProject_Add(
        ceresSolver
        URL ${CACHED_URL}
        URL_HASH SHA256=30ac0729249f908afe80cb6fd06ae6d037f25a60d9fac54f61344389adab9c1a
        DOWNLOAD_DIR ${ARCHIVE_DIR}
        PATCH_COMMAND ${CERES_PATCH_CMD}
        INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
        DEPENDS eigen glog CXSparse
        CMAKE_ARGS ${CERES_SOLVER_CMAKE_ARGS}
)
